# Note: Publicly available services should listen on 4000, private ones on 5000
# This works because the server has 2 IPs, only one is allowed through the unifi router
# and docker maps 443 on each of them to the different internal ports.
# This allows me to use public dns names, not need to type any port numbers and only expose
# some of the services to the internet.
# To make this work it also requires an explicit dns provider plugin otherwise letsencrypt can't
# authenticate we own a domain that it can't contact.
https://caddy.mattnet.xyz:4000 {
	respond "Caddy here"
}
# Frigate NVR
https://cameras.mattnet.xyz:4000 {
	reverse_proxy https://frigate-srv:8971 {
		transport http {
			tls_insecure_skip_verify
		}
	}
}
# Frigate server portainer instance
https://frigate-srv-portainer.mattnet.xyz:5000 {
	reverse_proxy http://frigate-srv:9000
}
# Direct camera connections
https://footpath.mattnet.xyz:5000 {
	reverse_proxy http://192.168.3.12 {
		# Block all default and allow a small curated set to avoid too many headers error
		header_up -*
		header_up Host {host}                       # Original host requested by the client
		header_up Cookie {http.request.header.Cookie}
		header_up Accept {http.request.header.Accept}
		#header_up Accept-Language {http.request.header.Accept-Language}
		#header_up Accept-Encoding {http.request.header.Accept-Encoding}
		#header_up X-Real-IP {remote_host}
		#header_up X-Forwarded-For {remote_host}
		#header_up X-Forwarded-Proto {scheme}
		#header_up User-Agent {http.request.header.User-Agent}
	}
}
https://frontdeck.mattnet.xyz:5000 {
	reverse_proxy http://192.168.3.13 {
		# Block all default and allow a small curated set to avoid too many headers error
		header_up -*
		header_up Host {host}
		header_up Cookie {http.request.header.Cookie}
		header_up Accept {http.request.header.Accept}
	}
}
https://upstairs.mattnet.xyz:5000 {
	reverse_proxy http://192.168.3.14 {
		# Block all default and allow a small curated set to avoid too many headers error
		header_up -*
		header_up Host {host}
		header_up Cookie {http.request.header.Cookie}
		header_up Accept {http.request.header.Accept}
	}
}
https://downstairs.mattnet.xyz:5000 {
	reverse_proxy http://192.168.3.15 {
		# Block all default and allow a small curated set to avoid too many headers error
		header_up -*
		header_up Host {host}
		header_up Cookie {http.request.header.Cookie}
		header_up Accept {http.request.header.Accept}
	}
}
https://unifi.mattnet.xyz:5000 {
	reverse_proxy https://unifi.local:8443 {
		transport http {
			tls_insecure_skip_verify
		}
	}
}
https://proxmox.mattnet.xyz:5000 {
	reverse_proxy https://proxmox.local:8006 {
		transport http {
			tls_insecure_skip_verify
		}
	}
}
