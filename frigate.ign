{
  "ignition": {
    "version": "3.5.0"
  },
  "passwd": {
    "users": [
      {
        "name": "core",
        "sshAuthorizedKeys": [
          "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP0aOcfZUTphzc5SbyyufwcwLiKPsDwzG14LckmPyRaa"
        ]
      }
    ]
  },
  "storage": {
    "directories": [
      {
        "path": "/mnt/container_data/volumes"
      }
    ],
    "disks": [
      {
        "device": "/dev/disk/by-id/scsi-0QEMU_QEMU_HARDDISK_drive-scsi1",
        "partitions": [
          {
            "label": "container_data"
          }
        ],
        "wipeTable": true
      }
    ],
    "files": [
      {
        "path": "/etc/hostname",
        "contents": {
          "compression": "",
          "source": "data:,frigate-srv"
        },
        "mode": 420
      },
      {
        "path": "/etc/profile.d/systemd-pager.sh",
        "contents": {
          "compression": "",
          "source": "data:,%23%20Tell%20systemd%20to%20not%20use%20a%20pager%20when%20printing%20information%0Aexport%20SYSTEMD_PAGER%3Dcat%0A"
        },
        "mode": 420
      },
      {
        "path": "/etc/zincati/config.d/55-updates-strategy.toml",
        "contents": {
          "compression": "",
          "source": "data:;base64,W3VwZGF0ZXNdCnN0cmF0ZWd5ID0gInBlcmlvZGljIgpbW3VwZGF0ZXMucGVyaW9kaWMud2luZG93XV0KZGF5cyA9IFsgIlNhdCIsICJTdW4iIF0Kc3RhcnRfdGltZSA9ICIwMDozMCIKbGVuZ3RoX21pbnV0ZXMgPSA2MAo="
        }
      },
      {
        "path": "/etc/NetworkManager/system-connections/static-ens19.nmconnection",
        "contents": {
          "compression": "gzip",
          "source": "data:;base64,H4sIAAAAAAAC/zzMQQqDMBBG4f3cRYvBSl3kJOJimvzFAZ1IZlLo7buwdP++t6SiiuRSdCXJ0ZxdUge1YSb/nIjwDVXhJOqoL07olA/EK+Hm5beIXhuIFjnf40oHfCs5HqyNd+KcK8xgcZhDP0yPPtzHPtzCeIHpD7IYP3dk+gYAAP//QrCmuZoAAAA="
        },
        "mode": 384
      }
    ],
    "filesystems": [
      {
        "device": "/dev/disk/by-partlabel/container_data",
        "format": "ext4",
        "label": "container_data",
        "path": "/var/mnt/container_data"
      }
    ],
    "links": [
      {
        "path": "/etc/localtime",
        "target": "../usr/share/zoneinfo/Australia/Brisbane"
      },
      {
        "path": "/var/lib/docker/volumes",
        "target": "/mnt/container_data/volumes"
      }
    ]
  },
  "systemd": {
    "units": [
      {
        "dropins": [
          {
            "contents": "[Service]\n# Override Execstart in main unit\nExecStart=\n# Add new Execstart with `-` prefix to ignore failure`\nExecStart=-/usr/sbin/agetty --autologin core --noclear %I $TERM\n",
            "name": "autologin-core.conf"
          }
        ],
        "name": "serial-getty@ttyS0.service"
      },
      {
        "dropins": [
          {
            "contents": "[Service]\n# Override Execstart in main unit\nExecStart=\n# Add new Execstart with `-` prefix to ignore failure`\nExecStart=-/usr/sbin/agetty --autologin core --noclear %I $TERM\n",
            "name": "autologin-core.conf"
          }
        ],
        "name": "getty@.service"
      },
      {
        "contents": "[Unit]\nDescription=Container data directory\n\n[Mount]\nWhat=/dev/disk/by-label/container_data\nWhere=/var/mnt/container_data\nType=auto\n\n[Install]\nWantedBy=multi-user.target",
        "enabled": true,
        "name": "var-mnt-container_data.mount"
      },
      {
        "contents": "[Unit]\nDescription=Container data automount\n\n[Automount]\nWhere=/var/mnt/container_data\n[Install]\nWantedBy=multi-user.target",
        "enabled": true,
        "name": "var-mnt-container_data.automount"
      },
      {
        "contents": "[Unit]\nDescription=Rebase to uCore NVIDIA Minimal\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/bin/bash -c '\\\n  if ! rpm-ostree status | grep -q ucore; then \\\n    rpm-ostree rebase --bypass-driver --experimental ostree-unverified-registry:ghcr.io/ublue-os/ucore-minimal:stable-nvidia \u0026\u0026 \\\n    touch /etc/.ucore-rebase-in-progress \u0026\u0026 \\\n    sleep 5 \u0026\u0026 \\\n    reboot; \\\n  else \\\n    touch /etc/.ucore-rebase-complete; \\\n  fi'\n\n[Install]\nWantedBy=multi-user.target",
        "enabled": true,
        "name": "rebase-to-ucore.service"
      },
      {
        "contents": "[Unit]\nDescription=Portainer Admin Container\nAfter=docker.service\nRequires=docker.service var-mnt-container_data.mount\n# Wait for ucore install\nConditionPathExists=/etc/.ucore-rebase-complete\nAfter=network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker stop %n\nExecStartPre=-/usr/bin/docker rm %n\nExecStartPre=/usr/bin/docker pull portainer/portainer-ce:latest\nExecStart=-/usr/bin/mkdir -p /mnt/container_data/portainer_data\n# Privileged mode is required for binding to local socket to work due to SELINUX (https://github.com/portainer/portainer/issues/849)\nExecStart=/usr/bin/docker run --privileged=true -d --name %n --restart always \\\n  -p 8000:8000 -p 9443:9443 -p 9000:9000 \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v /mnt/container_data/portainer_data:/data \\\n  portainer/portainer-ce:latest\nExecStop=/usr/bin/docker stop -t 15 %n\n\n[Install]\nWantedBy=multi-user.target",
        "enabled": true,
        "name": "docker.portainer.service"
      }
    ]
  }
}
