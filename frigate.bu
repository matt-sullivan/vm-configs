variant: fcos
version: 1.0.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIP0aOcfZUTphzc5SbyyufwcwLiKPsDwzG14LckmPyRaa
storage:
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: frigate

  links:
    - path: /etc/localtime
      target: ../usr/share/zoneinfo/Australia/Brisbane

systemd:
  units:
  # - name: var-mnt-container_data.mount
  #   enabled: true
  #   contents: |-
  #     [Unit]
  #     Description=Container data directory

  #     [Mount]
  #     What=/dev/disk/by-uuid/037983dc-436d-48d6-bec9-9cf40be697b9
  #     Where=/var/mnt/container_data
  #     Type=auto

  #     [Install]
  #     WantedBy=multi-user.target
  # - name: var-mnt-container_data.automount
  #   enabled: true
  #   contents: |-
  #     [Unit]
  #     Description=Container data automount

  #     [Automount]
  #     Where=/var/mnt/container_data
      # [Install]
      # WantedBy=multi-user.target

  - name: docker.portainer.service
    enabled: true
    contents: |-
      [Unit]
      Description=Portainer Admin Container
      After=docker.service
      Requires=docker.service mnt-container_data.mount

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker stop %n
      ExecStartPre=-/usr/bin/docker rm %n
      ExecStartPre=/usr/bin/docker pull portainer/portainer
      ExecStart=-/usr/bin/mkdir -p /mnt/container_data/portainer_data
      # Privileged mode is required for binding to local socket to work due to SELINUX (https://github.com/portainer/portainer/issues/849)
      ExecStart=/usr/bin/docker run --privileged=true -d -p 9000:9000 --name %n --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /mnt/container_data/portainer_data:/data portainer/portainer --no-analytics --host=unix:///var/run/docker.sock
      ExecStop=/usr/bin/docker stop -t 15 %n

      [Install]
      WantedBy=multi-user.target
  - name: docker.qemu-agent.service
    enabled: true
    contents: |-
      [Unit]
      Description=QEMU Guest Agent Container
      After=docker.service
      Requires=docker.service mnt-container_data.mount

      [Service]
      Type=oneshot
      RemainAfterExit=yes
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker stop %n
      ExecStartPre=-/usr/bin/docker rm %n
      ExecStartPre=/usr/bin/docker load -i /mnt/container_data/qemu-guest-agent.tgz
      ExecStartPre=/usr/bin/docker tag e2ab nkcx/qemu-guest-agent:latest
      # ExecStartPre=/usr/bin/docker pull nkcx/qemu-guest-agent:latest
      # ExecStart=-/usr/bin/mkdir -p /mnt/container_data/qemu_agent_data
      # Privileged mode is required for binding to local socket to work due to SELINUX (https://github.com/portainer/portainer/issues/849)
      ExecStart=/usr/bin/docker run --privileged=true -d --name %n --restart always -v /dev/virtio-ports/org.qemu.guest_agent.0:/dev/virtio-ports/org.qemu.guest_agent.0 nkcx/qemu-guest-agent:latest
      ExecStop=/usr/bin/docker stop -t 15 %n

      [Install]
      WantedBy=multi-user.target
  # - name: docker.watchtower.service
  #   enabled: true
  #   contents: |-
  #     [Unit]
  #     Description=Watchtower Container
  #     After=docker.service
  #     Requires=docker.service

  #     [Service]
  #     Type=oneshot
  #     RemainAfterExit=yes
  #     TimeoutStartSec=0
  #     ExecStartPre=-/usr/bin/docker stop %n
  #     ExecStartPre=-/usr/bin/docker rm %n
  #     ExecStartPre=/usr/bin/docker pull containrrr/watchtower
  #     ExecStart=/usr/bin/docker run --privileged -d --name %n -v /var/run/docker.sock:/var/run/docker.sock:z containrrr/watchtower
  #     ExecStop=/usr/bin/docker stop -t 15 %n

  #     [Install]
  #     WantedBy=multi-user.target
